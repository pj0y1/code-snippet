#!/bin/bash
# loan-calc enhanced version

progname=$(basename $0)

usage () {
	cat <<- eof
	$progname: usage: $progname [-h | -i] [PRICIPAL INTEREST MONTHS]

	where:
	PRINCIPAL is the amount of the loan
	INTEREST is the APR as number (7% = 0.07)
	MONTHS is the length of the loan's term
eof
}

check_parameter () {
	if [[ $1 =~ ^[1-9][0-9]*\.[0-9]+$|^[1-9][0-9]*$ \
	&& $2 =~ ^0?\.[0-9]+$ \
	&& $3 =~ ^[1-9][0-9]*$ ]]; then
		return 0 # parameter ok
	else
		echo "$FUNCNAME: Invalid input. " >&2 
		return 1
	fi
}

error () {
	echo "Invalid input. "
	usage
}
#check_parameter 100000 1.000 24
interactive=
if [ $# -eq 1 ]; then
	case $1 in
		-h|--help) usage; exit ;;
		-i|--interactive) interactive=1 ;;
		*) error >&2; exit 1;;
	esac
elif [ $# -eq 3 ]; then
	if check_parameter $1 $2 $3 ; then
		principal=$1
		interest=$2
		months=$3
	else
		error >&2
		exit 1
	fi
elif [ -z $1 ]; then
	usage
	exit
else
	error >&2
	exit 1
fi

if [ "$interactive" == 1 ]; then
	while true; do
		read -p "Please enter principal, interest, months: " principal interest months
		if check_parameter $principal $interest $months ; then
			break
		else 
			error
			continue
		fi
	done
fi

ANS=$(bc <<< "scale = 10;i = $interest/12;p = $principal;m = $months;p*((i*((1+i)^m))/(((1+i)^m)-1))")
#echo $ANS
printf "Your monthly payment is: %.4f\n" "$ANS"

# 2 ways to direct here document result to $REPLY (both using subshell)
#read < <(
#bc <<- eof 
#x = 26
#y = 12
#x * y
#eof
#)  
#echo $REPLY

#(
#bc << eof
#x = 12
#y = 13
#x * y
#eof
#) > >(read; echo $REPLY)

# Using here document to return stdout to a shell variable
#answer=$(
#(
#bc << eof
#x = 14
#14^2
#eof
#)
#)
#echo $answer
